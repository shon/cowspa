MooTools placeholder: http://github.com/phpinfo/MooTools-Placeholder
Possible mustache replacement supposed to be faster and has more features: https://github.com/wycats/handlebars.js

http URLs

static directories
<biztype>/<lang>/<theme>/<role>/<module>
eg. thehub/en_UK/sunshine/host/members/account
pub -> /members/account
       /members/social
       /members/507/social

/dashboard
/members/<member-id>/account
/members/<member-id>/account/edit

/profile
/profile/edit


JSON paths
/dashboard
/profiles/<username-or-id>

http://cowspa.net/en_US/host/nature/members/account
http://cowspa.net/de/director/sunrise/reports/trends/bookings

{
    retcode: int, # 0: complete,
                  # 1: no such api,
                  # 2: auth failure,
                  # 3: validation failure,
                  # 4: failed with exception
    result: any jsonable obj,
                # retcode is 3 result would be { more: [msg1, ..], parameter1: [msg, msg2, ..], parameter2: [msg1, ..] }
                # more holds the messages that does not belong to any parameter passed
}
    

validation libraries

validictory
- jsonschema based
- http://pypi.python.org/pypi/validictory
- not friendly error messages

jsonwidget
- https://bitbucket.org/robla/jsonwidget-python/
- has python and javascript implementation
- dependency on urwid, untested

Colander
- http://docs.pylonsproject.org/projects/colander/
- No JSON schema, need manual if decide to expose schema
- friendly error messages, well documented

JSON URI Scheme
---------------

GET /<resource-type>/<resource-id>
-> info {}

GET /<resource-type>/<resource-id>/<key>/<value>
-> TRUE/f

GET /<resource-type>/<resource-id>/<key>
-> <value>

DELETE /<resource-type>/<resource-id>
-> True/False

POST /<resource-type>/<resource-id>/ json {}
-> True/False

GET /<container-resource-type>/<container-resource-id>/<resource-type>
-> info {}

Supported
=========
Collections
-----------
GET /members
    members.list()
POST /members/ {filter}
    members.search(filter)
POST /members/new {name: ..}
    members.add({..})
DELETE /members
    members.delete_all

Objects
-------
GET /members/3 
    members[3].info()
DELETE /members/3
    members[3].delete()
POST /contact/3/ {address: "new address"}
    members[3].update(mod_data={address: "new address")
POST /members/3/contact {address: "new address"}
    members[3].contact.update(mod_data={address: "new address")
GET /members/3/contact/address
    members[3].contact.get("address")

- Unsupported
GET /members/3/contact/address/new%20address {address: "new address"}
    members[3].contact.update(mod_data={address: "new address")

Object methods
    info/details
    delete
    update
    get
